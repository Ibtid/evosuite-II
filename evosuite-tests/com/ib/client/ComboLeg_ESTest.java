/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 19 09:14:10 GMT 2023
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.ComboLeg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComboLeg_ESTest extends ComboLeg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, "", "", 0);
      assertTrue(comboLeg1.equals((Object)comboLeg0));
      
      comboLeg1.m_designatedLocation = "CQST7xrS?";
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_exchange = "com.ib.client.ComboLeg";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_conId);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertEquals(0, comboLeg1.m_ratio);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_action = "";
      ComboLeg comboLeg1 = new ComboLeg(0, 0, "", "", 0);
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_ratio);
      assertEquals(0, comboLeg1.m_conId);
      assertTrue(boolean0);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_action = "KR>d~h7Hg}soBe";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg1.equals(comboLeg0);
      assertEquals(0, comboLeg1.m_openClose);
      assertFalse(comboLeg0.equals((Object)comboLeg1));
      assertEquals(0, comboLeg1.m_conId);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg1.m_ratio);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      
      comboLeg0.m_shortSaleSlot = (-1335);
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg1.equals(comboLeg0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, (String) null, "X6L&", 0, (-1504), (String) null);
      boolean boolean0 = comboLeg1.equals(comboLeg0);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_ratio);
      assertEquals((-1504), comboLeg1.m_shortSaleSlot);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      assertEquals(0, comboLeg0.m_openClose);
      
      comboLeg0.m_openClose = 46;
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 2, (String) null, "G:p_F?:r", (-2666));
      boolean boolean0 = comboLeg1.equals(comboLeg0);
      assertEquals(0, comboLeg0.m_ratio);
      assertEquals(2, comboLeg1.m_ratio);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals((-2666), comboLeg1.m_openClose);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      assertEquals(0, comboLeg0.m_conId);
      
      ComboLeg comboLeg1 = new ComboLeg();
      comboLeg0.m_conId = 1109;
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      assertEquals(0, comboLeg0.m_conId);
      
      comboLeg0.m_conId = (-14);
      ComboLeg comboLeg1 = new ComboLeg((-14), 0, (String) null, (String) null, 0);
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        comboLeg0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.ib.client.ComboLeg
         //
         verifyException("com.ib.client.ComboLeg", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_designatedLocation = "v93VL6I''9#Dnom6*0";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_ratio);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg();
      assertTrue(comboLeg1.equals((Object)comboLeg0));
      
      comboLeg1.m_exchange = "vC8qPF`O8";
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      comboLeg0.m_action = "Ii9q5B<,xtRH72x";
      ComboLeg comboLeg1 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertEquals(0, comboLeg1.m_conId);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_openClose);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, "com.ib.client.ComboLeg", (String) null, 0, 5414, "");
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertEquals(0, comboLeg1.m_ratio);
      assertFalse(boolean0);
      assertEquals(5414, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_openClose);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 0, "", "", 1, 2, "");
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_conId);
      assertEquals(0, comboLeg1.m_ratio);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(1, comboLeg1.m_openClose);
      assertEquals(2, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_openClose);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(0, 3, (String) null, (String) null, 2, 1, (String) null);
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(3, comboLeg1.m_ratio);
      assertEquals(1, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_openClose);
      assertEquals(2, comboLeg1.m_openClose);
      assertEquals(0, comboLeg1.m_conId);
      assertFalse(boolean0);
      assertEquals(0, comboLeg0.m_ratio);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      ComboLeg comboLeg1 = new ComboLeg(1, 0, (String) null, (String) null, 0);
      boolean boolean0 = comboLeg0.equals(comboLeg1);
      assertFalse(comboLeg1.equals((Object)comboLeg0));
      assertEquals(0, comboLeg1.m_shortSaleSlot);
      assertEquals(0, comboLeg1.m_ratio);
      assertFalse(boolean0);
      assertEquals(0, comboLeg1.m_openClose);
      assertEquals(1, comboLeg1.m_conId);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals((Object) null);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
      assertEquals(0, comboLeg0.m_ratio);
      assertFalse(boolean0);
      assertEquals(0, comboLeg0.m_conId);
      assertEquals(0, comboLeg0.m_openClose);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ComboLeg comboLeg0 = new ComboLeg();
      boolean boolean0 = comboLeg0.equals(comboLeg0);
      assertEquals(0, comboLeg0.m_conId);
      assertEquals(0, comboLeg0.m_ratio);
      assertEquals(0, comboLeg0.m_openClose);
      assertTrue(boolean0);
      assertEquals(0, comboLeg0.m_shortSaleSlot);
  }
}
